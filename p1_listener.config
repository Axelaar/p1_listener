# Configuration file for p1_listener.py.
# This file must be placed in the same directory as p1_listener.py.
# Each line must result in an executable python command.
# Blank lines and comment lines are ignored.

# Specify the location of the standard telegram and object definitions files.
standard_telegram           = '/home/pi/dsmr/standard_telegram.txt';
object_definitions          = '/home/pi/dsmr/telegram_definition.txt';

# Set the timezone of the location displaying the timestamps
target_timezone             = 'Europe/Amsterdam'

# Which method(s) should be used to transmit the data?
use_IP_telegram             = False;
use_rrd                     = False;
use_ws_telegram             = False;

# Write a daily log file with counter values, if a log
# file is specified below.  If specified, then also set
# the obis codes to be logged in the proper sequence.
daily_counter_logfile       = '/home/pi/logs/p1_midnight_readings.log';
log_object_list             = [];       # This is a required statement.
log_object_list.append('1-0:1.8.2');    # Counter in tariff 2
log_object_list.append('1-0:1.8.1');    # Counter in tariff 1
log_object_list.append('1-0:2.8.2');    # Counter out tariff 2
log_object_list.append('1-0:2.8.1');    # Counter out tariff 1
log_object_list.append('0-1:24.2.1');   # Counter Gas
log_list_clarification_text = 'Hoog_In;Laag_In;Hoog_Uit;Laag_uit;Gas;\r\n';

# Other required variables
delimiter                   = ';';
p1_usb_port                 = '/dev/ttyUSB0';

# Specify transmission details, only for the method(s) used.
# Comment out the details of the method that is not used.

#####################################################################################
#
# The next section is for IP telegram (UDP) transmission details
#
#####################################################################################
#host            = '192.168.x.x';             # IP address of target computer
#timer_IP        = 300;                         # Update interval of the IP kWh_total transmissions.
#
# For which obis codes should data be sent by IP telegram?
# Note: data is only sent when the value of the variable changes.
# Modify the port numbers as needed.
#IP_object_list = [];                # This is a required statement if IP transmissions are used.
#IP_object_list.append(('1-0:1.8.1', host, 7111));  # Counter in tariff 1
#IP_object_list.append(('1-0:1.8.2', host, 7112));  # Counter in tariff 2
#IP_object_list.append(('1-0:2.8.1', host, 7113));  # Counter out tariff 1
#IP_object_list.append(('1-0:2.8.2', host, 7114));  # Counter out tariff 2
#IP_object_list.append(('0-0:96.14.0', host, 7115));# Tariff indicator
#IP_object_list.append(('1-0:1.7.0', host, 7116)); # Power in (kW)
#IP_object_list.append(('1-0:2.7.0', host, 7117)); # Power out (kW)
#IP_object_list.append(('0-1:24.2.1', host, 7118)); # Gas

#####################################################################################
#
# The next section specifies websocket transmission details
#
#####################################################################################
# Specify transmission details for websocket, comment out the lines
# with the obis codes you do not want to use.
# Note: data is only sent when the value of the variable changes.
#ws_connection_detail        = 'ws://127.0.0.1:9000'
#timer_ws        = 300;                          # Update interval of the ws kWh_total transmissions.
#ws_object_list  = [];                           # This is a required statement if websocket is used.
#ws_object_list.append(('1-0:1.8.1', 'L__In'));  # Counter in tariff 1
#ws_object_list.append(('1-0:1.8.2', 'H__In'));  # Counter in tariff 2
#ws_object_list.append(('1-0:2.8.1', 'L_Out'));  # Counter out tariff 1
#ws_object_list.append(('1-0:2.8.2', 'H_Out'));  # Counter out tariff 2
#ws_object_list.append(('0-0:96.14.0', 'Tarif'));# Tariff indicator
#ws_object_list.append(('1-0:1.7.0', 'P__In'));  # Power in (kW)
#ws_object_list.append(('1-0:2.7.0', 'P_Out'));  # Power out (kW)
#ws_object_list.append(('0-1:24.2.1', 'Gas__')); # Gas

#####################################################################################
#
# The next section specifies Round Robin Database transmission details
#
#####################################################################################
# Specify transmission details for rrd, comment out the lines
# with the obis codes you do not want to use.
# Data is sent to the database in the order of obis codes as listed below.
# If for legacy purposes a zero value must be included then use the bogus
# obis code 'legacy_insert' in the required position.
#rrddb_e                     = '/home/pi/data/electricity.rrd';  # Comment out this line if no rrd is used for electricity.
#rrddb_g                     = '/home/pi/data/gas.rrd';          # Comment out this line if no rrd is used for gas.
#timer_rrd                   = 300;               # Update interval of the rrd electricity database.
#rrd_object_list     = [];                        # This is a required statement if rrd is used.
#rrd_object_list.append('1-0:1.8.2');    # Counter in tariff 2
#rrd_object_list.append('1-0:1.8.1');    # Counter in tariff 1
#rrd_object_list.append('1-0:2.8.2');    # Counter out tariff 2
#rrd_object_list.append('1-0:2.8.1');    # Counter out tariff 1
#rrd_object_list.append('legacy_insert');# Insert a zero value to satisfy legacy 'combined'.
#rrd_object_list.append('1-0:1.7.0');    # Power in (kW)
#rrd_object_list.append('1-0:2.7.0');    # Power out (kW)
#rrd_object_gas = ('0-1:24.2.1');        # Gas

! End of listing
